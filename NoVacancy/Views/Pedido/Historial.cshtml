@model IEnumerable<NoVacancy.Models.Pedido>
@{
    ViewData["Title"] = "Historial de Pedidos";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2 class="mb-4">Historial de Pedidos</h2>

@if (!Model.Any())
{
    <div class="alert alert-info">No hay pedidos registrados.</div>
}
else
{
    <table class="table table-bordered table-striped">
        <thead>
            <tr>
                <th>ID Pedido</th>
                <th>Cliente</th>
                <th>Monto Total</th>
                <th>Productos</th>
            </tr>
        </thead>
        <tbody>
        @foreach (var pedido in Model)
        {
            var carrito = pedido.Carrito;
            List<NoVacancy.Models.CarritoLinea>? lineas = null;
            if (carrito != null && ViewBag.LineasPorCarrito is IDictionary<int, List<NoVacancy.Models.CarritoLinea>> lineasDict && lineasDict.TryGetValue(carrito.idCarrito, out var l))
            {
                lineas = l;
            }
            var cliente = carrito?.Usuario?.UserName ?? "-";
            NoVacancy.Models.Detalle? detalle = null;
            if (ViewBag.DetallesPorPedido is IDictionary<int, NoVacancy.Models.Detalle> detallesDict && detallesDict.TryGetValue(pedido.idPedido, out var d))
            {
                detalle = d;
            }
            <tr>
                <td>@pedido.idPedido</td>
                <td>@cliente</td>
                <td>$@detalle?.monto.ToString("0.00")</td>
                <td>
                    @if (lineas != null && lineas.Any())
                    {
                        <ul>
                        @foreach (var linea in lineas)
                        {
                            <li>
                                @linea.Producto?.nombre x @linea.cantidad
                                <span class="text-muted small">
                                    (Color: @linea.Producto?.Color?.nombre, Talla: @linea.Producto?.Talla?.nombre)
                                </span>
                                @{
                                    var reseniasDict = ViewBag.ReseniasPorProducto as IDictionary<int, NoVacancy.Models.Resenia>;
                                    NoVacancy.Models.Resenia? reseniaLinea = null;
                                    if (reseniasDict != null && linea.Producto != null)
                                    {
                                        reseniasDict.TryGetValue(linea.Producto.idProducto, out reseniaLinea);
                                    }
                                }
                                @if (reseniaLinea != null)
                                {
                                    <span class="ms-2">
                                        @for (int j = 1; j <= 5; j++)
                                        {
                                            <span style="font-size:1.1rem;color:@(j <= reseniaLinea.calificacion ? "#ffc107" : "#ccc");">&#9733;</span>
                                        }
                                    </span>
                                }
                                else
                                {
                                    <a class="btn btn-sm btn-outline-primary ms-2" href="@Url.Action("Create", "Resenia", new { idProducto = linea.Producto?.idProducto })">
                                        Dejar rese√±a
                                    </a>
                                }
                            </li>
                        }
                        </ul>
                    }
                    else
                    {
                        <span>-</span>
                    }
                </td>
            </tr>
        }
        </tbody>
    </table>
}
