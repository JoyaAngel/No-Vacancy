// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NoVacancy.Data;

#nullable disable

namespace NoVacancy.Migrations
{
    [DbContext(typeof(NoVacancyDbContex))]
    [Migration("20250513023328_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("NoVacancy.Models.CarritoCabecera", b =>
                {
                    b.Property<int>("idCarrito")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idCarrito"));

                    b.Property<int>("idCliente")
                        .HasColumnType("int");

                    b.HasKey("idCarrito");

                    b.HasIndex("idCliente");

                    b.ToTable("Carritos");
                });

            modelBuilder.Entity("NoVacancy.Models.CarritoLinea", b =>
                {
                    b.Property<int>("idCarrito")
                        .HasColumnType("int");

                    b.Property<int>("idProducto")
                        .HasColumnType("int");

                    b.Property<int>("cantidad")
                        .HasColumnType("int");

                    b.HasKey("idCarrito", "idProducto");

                    b.HasIndex("idProducto");

                    b.ToTable("CarritoLinea");
                });

            modelBuilder.Entity("NoVacancy.Models.Categoria", b =>
                {
                    b.Property<int>("idCategoria")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idCategoria"));

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idCategoria");

                    b.ToTable("Categorias");
                });

            modelBuilder.Entity("NoVacancy.Models.Cliente", b =>
                {
                    b.Property<int>("idCliente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idCliente"));

                    b.Property<string>("constrasenia")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("correo")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idCliente");

                    b.HasIndex("correo")
                        .IsUnique();

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("NoVacancy.Models.Color", b =>
                {
                    b.Property<int>("idColor")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idColor"));

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idColor");

                    b.ToTable("Colores");
                });

            modelBuilder.Entity("NoVacancy.Models.Detalle", b =>
                {
                    b.Property<int>("idDetalle")
                        .HasColumnType("int");

                    b.Property<int>("idPedido")
                        .HasColumnType("int");

                    b.Property<double>("monto")
                        .HasColumnType("float");

                    b.HasKey("idDetalle", "idPedido");

                    b.HasIndex("idPedido");

                    b.ToTable("Detalle");
                });

            modelBuilder.Entity("NoVacancy.Models.Imagen", b =>
                {
                    b.Property<int>("idImagen")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idImagen"));

                    b.Property<int>("idProducto")
                        .HasColumnType("int");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idImagen");

                    b.HasIndex("idProducto");

                    b.ToTable("Imagenes");
                });

            modelBuilder.Entity("NoVacancy.Models.Pedido", b =>
                {
                    b.Property<int>("idPedido")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idPedido"));

                    b.Property<string>("codigoPostal")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("idCarrito")
                        .HasColumnType("int");

                    b.Property<string>("regimen")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("rfc")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idPedido");

                    b.HasIndex("idCarrito");

                    b.ToTable("Pedidos");
                });

            modelBuilder.Entity("NoVacancy.Models.Producto", b =>
                {
                    b.Property<int>("idProducto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idProducto"));

                    b.Property<int>("cantidad")
                        .HasColumnType("int");

                    b.Property<string>("descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("idCategoria")
                        .HasColumnType("int");

                    b.Property<int>("idColor")
                        .HasColumnType("int");

                    b.Property<int>("idTalla")
                        .HasColumnType("int");

                    b.Property<int?>("limite")
                        .HasColumnType("int");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("precio")
                        .HasPrecision(18, 2)
                        .HasColumnType("float(18)");

                    b.HasKey("idProducto");

                    b.HasIndex("idCategoria");

                    b.HasIndex("idColor");

                    b.HasIndex("idTalla");

                    b.ToTable("Productos");
                });

            modelBuilder.Entity("NoVacancy.Models.Resenia", b =>
                {
                    b.Property<int>("idResenia")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idResenia"));

                    b.Property<int>("calificacion")
                        .HasColumnType("int");

                    b.Property<int>("idProducto")
                        .HasColumnType("int");

                    b.Property<string>("resenia")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idResenia");

                    b.HasIndex("idProducto");

                    b.ToTable("Resenias");
                });

            modelBuilder.Entity("NoVacancy.Models.Talla", b =>
                {
                    b.Property<int>("idTalla")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idTalla"));

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idTalla");

                    b.ToTable("Tallas");
                });

            modelBuilder.Entity("NoVacancy.Models.CarritoCabecera", b =>
                {
                    b.HasOne("NoVacancy.Models.Cliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("idCliente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("NoVacancy.Models.CarritoLinea", b =>
                {
                    b.HasOne("NoVacancy.Models.CarritoCabecera", "Carrito")
                        .WithMany()
                        .HasForeignKey("idCarrito")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NoVacancy.Models.Producto", "Producto")
                        .WithMany()
                        .HasForeignKey("idProducto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Carrito");

                    b.Navigation("Producto");
                });

            modelBuilder.Entity("NoVacancy.Models.Detalle", b =>
                {
                    b.HasOne("NoVacancy.Models.Pedido", "Pedido")
                        .WithMany()
                        .HasForeignKey("idPedido")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Pedido");
                });

            modelBuilder.Entity("NoVacancy.Models.Imagen", b =>
                {
                    b.HasOne("NoVacancy.Models.Producto", "Producto")
                        .WithMany()
                        .HasForeignKey("idProducto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Producto");
                });

            modelBuilder.Entity("NoVacancy.Models.Pedido", b =>
                {
                    b.HasOne("NoVacancy.Models.CarritoCabecera", "Carrito")
                        .WithMany()
                        .HasForeignKey("idCarrito")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Carrito");
                });

            modelBuilder.Entity("NoVacancy.Models.Producto", b =>
                {
                    b.HasOne("NoVacancy.Models.Categoria", "Categoria")
                        .WithMany()
                        .HasForeignKey("idCategoria")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("NoVacancy.Models.Color", "Color")
                        .WithMany()
                        .HasForeignKey("idColor")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("NoVacancy.Models.Talla", "Talla")
                        .WithMany()
                        .HasForeignKey("idTalla")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Categoria");

                    b.Navigation("Color");

                    b.Navigation("Talla");
                });

            modelBuilder.Entity("NoVacancy.Models.Resenia", b =>
                {
                    b.HasOne("NoVacancy.Models.Producto", "Producto")
                        .WithMany()
                        .HasForeignKey("idProducto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Producto");
                });
#pragma warning restore 612, 618
        }
    }
}
